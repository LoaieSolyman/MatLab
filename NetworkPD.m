function delays1 = NetworkPD()
mu1=1.1973;mu2=1.4555;mu3=1.8209;mu4=10000;sig1=0.06061473;sig2=0.08344631;sig3=0.14030575;sig4=0;
transition=[[0.77563427 0.08001159 0.14435415];[0.14751214  0.7387839 0.11370396];[0.09761491 0.07679585 0.82558924]];
emission=[[0.34819087 0.12771163 0.4690975 0.035];[0.49438005 0.21317265 0.2574473 0.035];[0.47448829 0.25763582 0.23287588 0.035]];
n=10000;
delays1=zeros(1,n);
v=[1 1 1 2 2 2 1 0 0 0 1 1 1 1 0 0 0 0 1 2 2 2 2 2 2 2 2 2 0 0 2 2 2 2 2 2 0 ...
 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 1 ...
 1 1 1 0 0 0 0 0 0 0 0 2 2 2 2 1 1 0 0 2 0 0 0 0 2 2 2 2 0 0 2 2 2 2 2 0 0 ...
 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 2 1 0 0 0 0 0 0 0 0 0 2 2 2 1 1 1 ...
 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 2 2 2 0 2 2 2 ...
 2 2 2 2 0 0 0 2 2 2 2 2 2 1 1 1 2 2 2 2 2 2 1 1 1 0 0 2 2 2 2 2 2 2 2 2 2 ...
 2 2 2 2 2 2 2 2 2 0 0 0 0 0 0 2 2 1 1 1 1 1 1 1 2 2 2 2 2 0 0 0 0 0 0 0 2 ...
 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 0 0 0 0 0 2 2 2 2 2 2 2 0 0 0 0 0 ...
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 0 0 0 2 2 2 2 ...
 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 0 0 0 0 0 0 1 1 0 0 0 0 0 2 2 2 2 ...
 2 2 0 0 0 2 2 2 2 2 2 2 2 1 0 2 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 1 2 2 2 0 ...
 0 0 1 1 1 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 0 0 0 1 ...
 1 1 1 0 1 1 1 1 1 1 1 2 2 2 2 0 1 1 1 1 1 0 2 2 2 0 0 0 0 2 2 2 2 2 2 2 2 ...
 2 2 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 2 2 2 2 2 2 2 0 0 0 0 1 1 1 1 2 ...
 2 2 2 2 2 0 0 2 2 2 2 2 2 0 0 0 2 2 1 1 1 1 1 1 1 2 2 0 2 1 2 2 2 2 2 2 2 ...
 2 2 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 2 0 0 0 2 2 2 2 2 2 2 2 ...
 2 2 2 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 2 2 2 1 1 1 0 1 1 1 1 1 2 2 2 ...
 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 0 1 0 0 2 2 2 2 2 2 0 0 0 0 0 0 0 0 0 0 2 ...
 2 2 2 2];
for i=1:size(emission,1)
    for j=2:size(emission,2)
        emission(i,j)=emission(i,j)+emission(i,j-1);
    end
end
for i=1:n
    k=mod(i,669)+1;
    p2=rand;
    s1=v(k)+1;
    for j=2:size(emission,2)
        if p2<emission(s1,1)
            s2=1;
        end
        if p2>emission(s1,j-1) && p2<emission(s1,j)
            s2=j;
        end
    end
    if s2==1
        delays1(i)=normrnd(mu3,sig3);
    else
        if s2==2
            delays1(i)=normrnd(mu1,sig1);
        else
            if s2==3
                delays1(i)=normrnd(mu2,sig2);
            else
                delays1(i)=-0.1;
            end
        end
    end
end
delays1;
delays2=[];
for i=1:size(delays1,2)
    if delays1(i)~=-0.1
        delays2=[delays2,delays1(i)];
    end
end
delays2;
%writematrix(delays1,'tdpd.csv');
tx=1:1:n;
plot(tx,delays1,'b*')
grid on
set(gcf,'color','w');
set(gca,'FontSize',14);
hold off
xlim([0 670])
ylim([-0.2 2.25])
xlabel('Sampling Period','FontSize',12)
ylabel('Delays (ms)','FontSize',12)
%saveas(gcf,'PredictTDPD','epsc');
end